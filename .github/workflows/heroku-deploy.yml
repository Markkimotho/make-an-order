name: CI/CD Pipeline for Testing and Deploying

on:
  push:
    branches:
      - main  # Trigger on push to the main branch

jobs:
  test-and-deploy:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:5.7  # Use MySQL 5.7
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.MYSQL_DB }}
        ports:
          - 3306:3306

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt

      # Step 4: Set up environment variables
      - name: Set up environment variables
        run: |
          echo "GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}" >> .env
          echo "GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}" >> .env
          echo "APP_SECRET_KEY=${{ secrets.APP_SECRET_KEY }}" >> .env
          echo "MYSQL_HOST=127.0.0.1" >> .env
          echo "MYSQL_PORT=3306" >> .env
          echo "MYSQL_USER=root" >> .env
          echo "MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}" >> .env
          echo "MYSQL_DB=${{ secrets.MYSQL_DB }}" >> .env
          echo "AT_USERNAME=${{ secrets.AT_USERNAME }}" >> .env
          echo "AT_API_KEY=${{ secrets.AT_API_KEY }}" >> .env
          echo "AT_SENDER_ID=${{ secrets.AT_SENDER_ID }}" >> .env

      # Debug Environment Variables
      - name: Debug Environment Variables
        run: cat .env

      # Step 5: Wait for MySQL to start
      - name: Wait for MySQL to start
        run: |
          for i in {1..10}; do
            if mysqladmin ping -h 127.0.0.1 -P 3306 -u root --password="${{ secrets.MYSQL_PASSWORD }}" --silent; then
              echo "MySQL is up and running."
              break
            fi
            echo "Waiting for MySQL to be available..."
            sleep 5
          done

      # Step 6: Run tests
      - name: Run tests
        env:
          MYSQL_HOST: 127.0.0.1
          MYSQL_PORT: 3306
          MYSQL_USER: root
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          MYSQL_DB: ${{ secrets.MYSQL_DB }}
        run: |
          source venv/bin/activate
          export PYTHONPATH=$(pwd)
          pytest tests/

      # Step 7: Install Heroku CLI
      - name: Install Heroku CLI
        run: |
          curl https://cli-assets.heroku.com/install.sh | sh
          heroku --version

      # Step 8: Set up Heroku remote
      - name: Set up Heroku remote
        run: |
          heroku git:remote -a make-an-order

      # Step 9: Deploy to Heroku
      - name: Deploy to Heroku
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      
        run: |
          git push https://heroku:${{ secrets.HEROKU_API_KEY }}@git.heroku.com/make-an-order.git main
    
