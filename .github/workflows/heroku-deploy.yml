name: Deploy to Heroku

on:
  push:
    branches:
      - main  # Trigger on push to the testing branch (change to main after it works)

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt

      - name: Set up environment variables
        run: |
          echo "GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}" >> .env
          echo "GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}" >> .env
          echo "APP_SECRET_KEY=${{ secrets.APP_SECRET_KEY }}" >> .env
          echo "MYSQL_HOST=${{ secrets.MYSQL_HOST }}" >> .env
          echo "MYSQL_USER=${{ secrets.MYSQL_USER }}" >> .env
          echo "MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}" >> .env
          echo "MYSQL_DB=${{ secrets.MYSQL_DB }}" >> .env
          echo "AT_USERNAME=${{ secrets.AT_USERNAME }}" >> .env
          echo "AT_API_KEY=${{ secrets.AT_API_KEY }}" >> .env
          echo "AT_SENDER_ID=${{ secrets.AT_SENDER_ID }}" >> .env

      - name: Run tests
        run: |
          source venv/bin/activate
          export PYTHONPATH=$(pwd)
          pytest tests/

      # Step 5: Install Heroku CLI using curl
      - name: Install Heroku CLI
        run: |
          curl https://cli-assets.heroku.com/install.sh | sh
          heroku --version

      # Step 6: Deploy to Heroku
      - name: Deploy to Heroku
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: |
          git remote add heroku https://git.heroku.com/make-an-order.git
          git push heroku main  # Push testing branch to Heroku's main branch
